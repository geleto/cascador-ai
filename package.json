{
	"name": "cascador-ai",
	"version": "0.1.2",
	"description": "Orchestrate AI agent workflows with Nunjucks-style text templates that implicitly run async tasks in parallel",
	"author": "Angel Popov<geleto@gmail.com>",
	"license": "Apache-2.0",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/geleto/cascador-ai.git"
	},
	"homepage": "https://github.com/geleto/cascador-ai#readme",
	"bugs": {
		"url": "https://github.com/geleto/cascador-ai/issues"
	},
	"keywords": [
		"ai",
		"agent",
		"vercel",
		"template",
		"async",
		"parallel",
		"concurrency",
		"llm",
		"orchestration",
		"workflow",
		"nunjucks",
		"templates"
	],
	"files": [
		"dist",
		"README.md",
		"LICENSE"
	],
	"type": "module",
	"main": "./dist/index.js",
	"module": "./dist/index.js",
	"types": "./dist/index.d.ts",
	"exports": {
		".": {
			"types": "./dist/index.d.ts",
			"import": "./dist/index.js",
			"require": "./dist/index.js"
		}
	},
	"scripts": {
		"build": "tsc -p tsconfig.build.json",
		"build:tsc": "tsc -p tsconfig.build.json",
		"clean": "rimraf dist",
		"lint": "eslint src tests",
		"typecheck": "tsc --noEmit",
		"test": "mocha",
		"test:watch": "mocha --watch",
		"test-type": "eslint tests/type-safety",
		"start": "tsx examples/story.ts"
	},
	"devDependencies": {
		"@babel/core": "^7.28.0",
		"@babel/preset-env": "^7.28.0",
		"@eslint/js": "^9.20.1",
		"@types/chai": "^5.0.1",
		"@types/chai-as-promised": "^8.0.2",
		"@types/mocha": "^10.0.10",
		"@types/node": "^22.13.4",
		"@typescript-eslint/eslint-plugin": "^8.24.0",
		"@typescript-eslint/parser": "^8.24.0",
		"chai": "^5.1.2",
		"chai-as-promised": "^8.0.1",
		"dotenv": "^16.4.5",
		"eslint": "^9.20.1",
		"mocha": "^11.0.1",
		"rimraf": "^6.0.1",
		"tsx": "^4.19.2",
		"typescript-eslint": "^8.24.0"
	},
	"engines": {
		"node": ">=18.0.0",
		"npm": ">=9.0.0"
	},
	"dependencies": {
		"cascada-engine": "^0.2.0",
		"ts-node": "^10.9.2",
		"typescript": "^5.8.3"
	},
	"peerDependencies": {
		"@ai-sdk/anthropic": "^2.0.1",
		"@ai-sdk/openai": "^2.0.7",
		"ai": "^5.0.8"
	}
}
